class Solution {
public:
    int maxProfit(vector<int>& prices) {
        
        //Brute Force that  Got TLE

        // for(int i = 0;i<prices.size()-1;i++){
        //     int amt = prices[i];
        //     for(int j = i+1;j<prices.size();j++){
        //         if(amt > prices[j])continue;
        //         else if(amt < prices[j]){
        //             prft = prices[j] - amt;
        //             if(prft > mx_prft){
        //                 mx_prft = prft;
        //             }
                    
        //         }
        //     }
        // }
        // return mx_prft;

        //little optimised
        stack<int>st;
        st.push(prices[0]);
        int profit = 0;
        int curr;
        for(int i = 1;i<prices.size();i++){
            if(st.top() < prices[i]){
                // we got out lower idx  that is [i]
                curr = prices[i] - st.top();
                profit = max(profit,curr);
                continue;
            }
            else if(st.top() > prices[i]){
                st.push(prices[i]);
            }
        }
        return profit;
    }
    //Most Optimised
        int profit = 0;
        int min_price =INT_MAX;
        for(auto price : prices){
            if(min_price > price){
                min_price = price;
            }
            else if(price - min_price > profit){
                profit = price - min_price;
            }
        }
        return profit;


};
